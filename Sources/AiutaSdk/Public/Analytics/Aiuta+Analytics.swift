// Copyright 2024 Aiuta USA, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import Foundation

extension Aiuta {
    /// Represents the analytics configuration for the Aiuta SDK.
    /// https://docs.aiuta.com/sdk/developer/configuration/analytics/
    ///
    /// The `Analytics` enum defines how analytics events are handled within the SDK.
    /// Developers can choose to not handle analytics events at all or provide a custom
    /// handler for processing these events.
    public enum Analytics {
        /// Disables analytics event tracking.
        /// Use this option if you do not want the SDK to report any analytics events.
        case none

        /// Enables analytics event tracking using a custom handler.
        ///
        /// This option allows developers to provide a custom implementation of the `Handler`
        /// protocol to process analytics events. The custom handler can be used to send events
        /// to a third-party analytics service, log events locally, or perform any other
        /// custom processing.
        ///
        /// - Parameter handler: An object conforming to the `Handler` protocol that processes
        ///   analytics events generated by the SDK.
        case handler(Handler)
    }
}

extension Aiuta.Analytics {
    /// Protocol defining the requirements for an SDK analytics event handler.
    public protocol Handler {
        /// Called when an analytics event occurs.
        ///
        /// This method is invoked by the SDK whenever an analytics event is generated.
        /// The implementation should handle the event appropriately, such as by sending
        /// it to an external analytics service or logging it for debugging purposes.
        ///
        /// - Parameter event: An `Aiuta.Event` enum representing the analytics event
        ///   that occurred, it defines various categories of events, each associated
        ///   with specific actions or states in the SDK.
        @available(iOS 13.0.0, *)
        func onAnalyticsEvent(_ event: Aiuta.Event) async
    }
}
